<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Chris Eidhof</title>
		<description>
			Personal Blog
		</description>
		<link>http://chris.eidhof.nl</link>
		<atom:link href="http://chris.eidhof.nl/feed.xml" rel="self" type="application/rss+xml"/>
		<item>
			<title>Weeknotes № 34</title>
			<description>
				&lt;p&gt;
	Last week we prepared and recorded more episodes about our SwiftUI keyframe reimplementation effort. I also worked on getting closer to the Catmull-Rom version that SwiftUI has implemented, but I’m not quite there yet. It’s close enough to be unnoticable, but I always feel like pushing that extra bit to get 100% accurate is somehow worth it when trying to understand how things work.
&lt;/p&gt;
&lt;p&gt;
	We replaced our old blender at home (it broke over a year ago), so I’ve been on a bit of a smoothie trip, making all kinds of combinations (spinach/banana/ginger is one of my favorites). I also finally made gazpacho again: almost everything (except for the stale bread) came directly from the garden. Absolutely delicious.
&lt;/p&gt;
&lt;p&gt;
	Towards the end of the week we started integrating the iOS 17 chapter of Thinking in SwiftUI into the rest of the book. This was a bit more work than expected but we have the basic contents in. Now some parts don’t flow as nicely, so that’ll be our focus for this week.
&lt;/p&gt;
&lt;p&gt;
	Yesterday I ran a 24km race again on quite difficult terrain. I wasn’t really sure how fit I am, but it turned to be much better than expected. I started off quickly and built up a gap to the guy behind me. I was afraid I overpaced myself doing that, and the gap stayed at roughly the same distance. Towards the end there was a short but steep climb where he got much closer, but I still had enough left to not let him pass.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 28 Aug 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-34</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-34</guid>
		</item>
		<item>
			<title>Weeknotes № 33</title>
			<description>
				&lt;p&gt;
	After last week’s conference in Toronto I went to NYC to get the most out of the transatlantic flight. The kind folks at iOSoho gave me a stage as well. After spending so long on preparing my talk (I didn’t track the time, but my guess is that it easily adds up to two weeks full-time) it was nice to give the same talk again to get some more mileage out of the preparation.
&lt;/p&gt;
&lt;p&gt;
	I spent the rest of my time in NYC by meeting a lot of friends, old and new. I love visiting the city, especially because of the people, the diversity and the buzz. I’ve had a lot of nice food and long walks with great people. However, in our current life situation, I think the life filled with nature, playing outside and swimming is nicer for us as a family right now (it sometimes feels like the opposite of New York). I miss things about the city, but would probably miss even more things about the countryside should we live in the city. The programmer in me wants to classify things: one should clearly be better than the other, but unfortunately, real life often doesn’t work like that. There are probably famous people who say this more eloquently, but one of the things I love about traveling is that it makes me appreciate home even more.
&lt;/p&gt;
&lt;p&gt;
	I haven’t really done much programming or research last week. One of the things I did realize (also throught conversations with other people) is that I really enjoy understanding (and then explaining) things at a really fundamental level. For me, the best way to do this seems to be by actually reimplementing the thing I’d like to understand. This also has been a recurring theme of Swift Talk over the years, not by accident.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 21 Aug 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-33</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-33</guid>
		</item>
		<item>
			<title>Weeknotes № 29-32</title>
			<description>
				&lt;p&gt;
	The last weeks we’ve mostly enjoyed our holiday (visiting the Baltic sea), spent time in the garden, and generally took it easy.
&lt;/p&gt;
&lt;p&gt;
	I finished the keyframe implementation, I think it’s almost the same as the native implementation but it works on older platforms. It’s not efficient and the code isn’t very pretty yet. While I don’t worry too much about efficiency, I would like to clean up the code before putting it out.
&lt;/p&gt;
&lt;p&gt;
	I’ve worked pretty hard on preparing the presentation that I gave last week at &lt;a href=&quot;http://swiftconf.to&quot;&gt;Swift TO&lt;/a&gt; and will give this week at &lt;a href=&quot;https://www.meetup.com/iosoho/events/295354940/&quot;&gt;iOSoho&lt;/a&gt;. There are almost 150 slides (build steps) for 30 minutes of talking (not including some of the hand-controlled animations). I don’t think I’ve ever had that many slides, and I don’t think it was too much.
&lt;/p&gt;
&lt;p&gt;
	I created the presentation using SwiftUI. This was both scary (what if it breaks on stage?) as well as really fun and productive. I was able to use all the builtin views and drawing, and a lot more nerdy stuff:
&lt;/p&gt;
&lt;p&gt;
	The presentation is a custom Mac app with two windows: one presenter window that I control and see, and a second presentation window that displays full-screen on the projector. Almost everything in the presentation is fake, to make things controllable and reliable. The simulator, the animated mouse clicks, the buttons, and the network loading.
&lt;/p&gt;
&lt;p&gt;
	I reused our (internal) diagrams library to draw and animate all kinds of tree diagrams. I used &lt;a href=&quot;https://movingparts.io/pow&quot;&gt;Pow&lt;/a&gt; for some of the animated effects. Not just transitions, but also shimmer effects in the tree diagrams to highlight specific features. I used the &lt;a href=&quot;https://talk.objc.io/episodes/S01E326-iphone-simulator-chrome-part-2&quot;&gt;iPhone simulator chrome&lt;/a&gt; to draw my views as if they were running in the simulator.
&lt;/p&gt;
&lt;p&gt;
	I dug up my old Logitech clicker, which works as if it were an external keyboard. I handled the keyboard events in SwiftUI, not only to move between slides but also to toggle specific features and trigger some animations.
&lt;/p&gt;
&lt;p&gt;
	I couldn’t get all the animations to work exactly the way I wanted to. Specifically the tree diagrams have some broken animations. I think this is due to the vertices being rendered through preferences. Likewise, I wanted to add a few more custom animations that I just didn’t have the time to implement. However, for upcoming presentations I should be able to take what I have and improve upon this, slowly working my way towards the perfect presentation.
&lt;/p&gt;
&lt;p&gt;
	Because anything can go wrong, I also spent a day implementing PDF export. This gave me a backup for when things fail as well as readable slides for other people. On recent versions of macOS, it’s now very easy to export SwiftUI views as vector PDFs. Some native views (e.g. &lt;code&gt;ProgressView&lt;/code&gt;) render as red circles with a line through them, but I could quickly work my way around that.
&lt;/p&gt;
&lt;p&gt;
	Of course, I did all of this work after I had the story and outline for my presentation done. I knew what I wanted to say, how much time I had left to prepare and made the decision to bite the bullet and use SwiftUI. It was &lt;em&gt;way&lt;/em&gt;
	 more work than doing a live-coding presentation or creating slides in Keynote, but I did enjoy it.
&lt;/p&gt;
&lt;p&gt;
	I’ve gotten some great feedback on the presentation. There were even people fixing bugs in their codebase the same day, which is always very rewarding. My goal was to help people understand my mental model of SwiftUI, and from talking to the attendees, I think I have achieved that.
&lt;/p&gt;
&lt;p&gt;
	I’m not sure whether the presentation video will be available publicly, but I’ll post the annotated slides here soon.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 14 Aug 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-32</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-32</guid>
		</item>
		<item>
			<title>Weeknotes № 28</title>
			<description>
				&lt;p&gt;
	Last week we put the finishing touches to the animation chapter, and recorded a bunch of episodes to cover the summer break. I worked a bit on my talk as well.
&lt;/p&gt;
&lt;p&gt;
	For our keyframe reimplementation, we also wanted to have cubic bezier timing curves. This was interesting to implement: sampling a cubic bezier curve is actually really simple, I was basically able to take &lt;a href=&quot;https://en.wikipedia.org/wiki/Bézier_curve#Cubic_Bézier_curves&quot;&gt;Wikipedia’s algorithm&lt;/a&gt; and just write it down in Swift. The algorithm is a function from &lt;code&gt;t&lt;/code&gt; to a point (you can actually use &lt;code&gt;VectorArithmetic&lt;/code&gt; instead of a point, which I did). After plotting everything, I realized that the &lt;code&gt;t&lt;/code&gt; isn’t used as the time value. Instead, if you use a &lt;code&gt;CGPoint&lt;/code&gt;, the &lt;code&gt;x&lt;/code&gt; value is the time, and the &lt;code&gt;y&lt;/code&gt; value the progress. in other words, the &lt;code&gt;t&lt;/code&gt; is used to sample the result, but not as the time or value.
&lt;/p&gt;
&lt;p&gt;
	This makes a lot of sense, but took me a while to figure out. To provide an efficient implementation, we need to then first find a &lt;code&gt;t&lt;/code&gt; for a given time (in other words, find &lt;code&gt;t&lt;/code&gt; for &lt;code&gt;x&lt;/code&gt;). There seem to be a number of efficient ways to do this &lt;a href=&quot;https://github.com/gre/bezier-easing/tree/master&quot;&gt;this&lt;/a&gt; and &lt;a href=&quot;https://github.com/WebKit/WebKit/blob/main/Source/WebCore/platform/graphics/UnitBezier.h&quot;&gt;this&lt;/a&gt; seems to be helpful. Once we have the correct &lt;code&gt;t&lt;/code&gt; we can get &lt;code&gt;y&lt;/code&gt; as well.
&lt;/p&gt;
&lt;p&gt;
	When you have multiple cubic bezier keyframes after each other, the implementation uses Catmull-Rom to interpolate between the keyframes. I also managed to implement this (on top of quadratic bezier curves), getting the exact same timing curve. Hopefully we can get this to Swift Talk sometime soon!
&lt;/p&gt;
&lt;p&gt;
	The summer holiday has started here, we had family visiting and will be going on a trip of our own. So next week there almost certainly won’t be any weeknotes.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 17 Jul 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-28</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-28</guid>
		</item>
		<item>
			<title>Weeknotes № 27</title>
			<description>
				&lt;p&gt;
	We spent most of last week getting the animation chapter ready for our Thinking in SwiftUI prerelease. Of all the chapters in our book this had the most additions for iOS 17. Phase animations, keyframe animations, completion handlers, custom animation curves, new transition APIs and custom keys for transactions.
&lt;/p&gt;
&lt;p&gt;
	Most of these APIs work as expected, but it took us a while longer to understand keyframes (especially since they still have some bugs that will hopefully be fixed soon). However, once we did figure them it turned out that they are pretty simple: they just animate a single (often compound) value over time, in a system that’s completely separate from regular SwiftUI animations. To understand it better, we also spent a day reimplementing the keyframe API. While our implementation doesn’t do cubic keyframes (arguably the most important keyframes) and doesn’t have the builder syntax, it really helped us understand how keyframe animations work.
&lt;/p&gt;
&lt;p&gt;
	In the house, I spent some time plastering defects in our wall. These happened during the final construction phase. The problem with loam (clay) walls is that they are a little less robust, on the other hand, the advantage is that they’re very easy to repair.
&lt;/p&gt;
&lt;p&gt;
	Running-wise, I’ve done some consistent high mileage, and am now ready to move to the next phase of marathon preparation: adding in some more speedwork. Doing a lot of slow running has been fun and I feel I have gotten fitter, now it’s time to get a bit faster as well.
&lt;/p&gt;
&lt;p&gt;
	I think it will always remain a bit of a challenge to be a Dutch person in Germany. It’s often the little things, for example, I just don’t use the car that often. When I walk to day care with my daughter, people often seem to feel sorry about that and offer a ride. Likewise, I have the feeling many drivers don’t really understand what it’s like to be a pedestrian or cyclist, creating dangerous situations (I’m pretty sure most of them don’t do it on purpose). I don’t really see any way to change this, and at the same time, I refuse to give up walking and cycling because of this.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 10 Jul 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-27</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-27</guid>
		</item>
		<item>
			<title>Weeknotes № 26</title>
			<description>
				&lt;p&gt;
	We were busy last week getting the layout chapter out, which is probably the chapter I’m most proud of. There’s still a lot more we could say about SwiftUI’s layout behavior, but I think it’s long enough already. We put a lot of effort into the explanations, I especially like the alignment explanations. We also prepared and recorded two more episodes.
&lt;/p&gt;
&lt;p&gt;
	I started working on my talk for the upcoming &lt;a href=&quot;https://www.swiftconf.to&quot;&gt;Swift TO&lt;/a&gt; conference. Really looking forward to that. I made a little presentation helper for SwiftUI so I can use that to give my presentation.
&lt;/p&gt;
&lt;p&gt;
	At home, I dug up most of the front garden. There were all kinds of weeds, large stones, large metal rods and other stuff. It feels like the previous owners haven’t really maintained it during the last few years, so we wanted a clean start.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 03 Jul 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-26</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-26</guid>
		</item>
		<item>
			<title>Weeknotes № 25</title>
			<description>
				&lt;p&gt;
	Last week, we had the post-launch week of our book, which is always fun. It’s nice to see the first feedback, which has been good so far. We also released a new chapter on state and binding. This one already has a bunch of (hopefully) helpful custom diagrams in there that show how the state system works. The chapter itself focuses on doing state using the pre-iOS17 way, and has pointers to the iOS 17 chapter (in which we explain the key differences and how to use the new state system). We also did our &lt;a href=&quot;https://www.youtube.com/watch?v=H4sSC7scvRw&quot;&gt;second Q&amp;amp;A livestream&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
	We also recorded some episodes in which we reimplement a simplified version of the new observation framework in SwiftUI. It turns out this is not that hard to do (although as always, tricky to get just right).
&lt;/p&gt;
&lt;p&gt;
	I spent a morning and half an afternoon doing home improvement, mostly working on the final section of drywall (there’s one corner which wasn’t finished yet). Running also went well, I feel like I recovered very quickly from the marathon. I did take it quite easy the first few days of the week, which always helps.
&lt;/p&gt;
&lt;p&gt;
	In the garden things are growing well. We’re starting to see some tomatoes appear, have strawberries and raspberries, and the cucumber is now producing really well too. The edamame plants I sowed are also still alive. I’ve never grown edamame before, so it’s definitely an experiment that can fail.
&lt;/p&gt;
			</description>
			<pubDate>Sun, 25 Jun 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-25</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-25</guid>
		</item>
		<item>
			<title>Weeknotes № 24</title>
			<description>
				&lt;p&gt;
	We went over the chapters of our book and tried to make an inventory of what we need to add. Most significantly, - the state chapter needs to describe the new way that object observing works, and the animations chapter needs a number of additions.
&lt;/p&gt;
&lt;p&gt;
	We then prepared everything for the launch. This is a bit of a tedious manual process (updating all the website pages, the bundles, all the items on Gumroad, etc.). On Friday we launched the &lt;a href=&quot;https://www.objc.io/books/thinking-in-swiftui&quot;&gt;prerelease of Thinking in SwiftUI&lt;/a&gt;. We also did a &lt;a href=&quot;https://www.youtube.com/watch?v=pYgAd-LF-UE&quot;&gt;live Q&amp;amp;A&lt;/a&gt; which was really fun. We plan to do these weekly so please &lt;a href=&quot;https://github.com/objcio/thinking-in-swiftui-qa/&quot;&gt;send in your questions&lt;/a&gt;. Here’s the &lt;a href=&quot;https://www.youtube.com/watch?v=H4sSC7scvRw&quot;&gt;Q&amp;amp;A for this Friday&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
	On Saturday I ran my first marathon in about a year. I have not trained as much (although I have been ramping up my mileage over the last month and a half) and I was very glad to see that I was only four minutes slower than last year (same course, but this year the weather was not as hot). I thought my shape was a lot worse, this is a good starting point to build off of. Although I did try to stay reasonably fit during the house renovation phase, I know I lost a lot of speed and endurance. Building these up again is very simple for me, but no so easy: when I consistently run a lot (more than 140k/week) over a long period of time (a year or longer) I get very fit.
&lt;/p&gt;
&lt;p&gt;
	I’m thinking of structuring my upcoming training similar to &lt;a href=&quot;https://www.howtoskate.se&quot;&gt;Nils van der Poel&lt;/a&gt;. Although his event is quite different (a speed-skating 10k lasts less 13 minutes whereas a fast marathon lasts almost three hours). I wonder if I should do even more aerobic training and less threshold than he describes.
&lt;/p&gt;
			</description>
			<pubDate>Sun, 18 Jun 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-24</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-24</guid>
		</item>
		<item>
			<title>Weeknotes № 23</title>
			<description>
				&lt;p&gt;
	Last week was WWDC week. Hard to miss, the Vision Pro was announced. I’m excited and worried about that device. I especially didn’t like the dad wearing the goggles to take videos of his kids. I already worry about myself (and others) using their phones and other devices too much when kids are around. You’re there but not really there. To me, this feels like an amazing device to use when I’m at home while everyone else is sleeping.
&lt;/p&gt;
&lt;p&gt;
	A whole bunch of new SwiftUI things got announced. Looks like some really solid improvements. I think the Metal shaders are going to be a lot of fun (&lt;a href=&quot;https://mastodon.social/@dlx/110515723356297247&quot;&gt;Robb is already making cool stuff&lt;/a&gt;). The animation and state changes are very welcome, but will also require to rewrite major parts of our (almost finished) book. What makes this extra tricky is that of course, these APIs might still change until September.
&lt;/p&gt;
&lt;p&gt;
	For the book, we went through and identified most of the parts that will need to change (we’ll blog about this very soon). We went ahead and drew our book’s cover in SwiftUI (the cover changes with each edition). We then also generated the hero image (for &lt;a href=&quot;https://www.objc.io/books/thinking-in-swiftui/&quot;&gt;the book’s page&lt;/a&gt;) in SwiftUI, as we couldn’t open the Sketch file anymore (we basically only use Sketch whenever we need to update that image). The hero image actually uses the generated PDF with the “live” book:
&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chris.eidhof.nl/images/thinking-in-swiftui-hero-original.png&quot; title/&gt;&lt;/p&gt;
&lt;p&gt;
	We’ll be releasing the book this week, keep an eye on &lt;a href=&quot;https://www.objc.io/blog&quot;&gt;our blog&lt;/a&gt; and mailing list to keep updated.
&lt;/p&gt;
&lt;p&gt;
	The weather has been amazing here and I went swimming in the lake with the kids almost every single day, which has been really fun for all of us.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 12 Jun 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-23</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-23</guid>
		</item>
		<item>
			<title>Weeknotes № 22</title>
			<description>
				&lt;p&gt;
	I modified our &lt;a href=&quot;https://github.com/objcio/attributed-string-builder/&quot;&gt;attributed-string-builder&lt;/a&gt; to accept modifiers that can be applied to SwiftUI environment. For example, this lets us modify the environment for all embeds inside an &lt;code&gt;AttributedStringConvertible&lt;/code&gt;. So far, the library has been really useful, and we’ve gotten really far with the rendering. For the full book, it’s becoming a bit slow (a few seconds to render), but compared to our previous LaTeX/Pandoc setup it’s blazingly fast. The flexibility and control we get from it is pretty amazing. I know you can have that same (and more) control in LaTeX, but because we write Swift every single day this has way less friction for us.
&lt;/p&gt;
&lt;p&gt;
	We visualized more things, abstracted some of the visualizations away (when similar diagrams use the same abstraction we can be sure they render in the same way, and don’t have subtle errors). We also started working towards ordering a proof copy, with an increased paper size and printed using color instead of grayscale. We’ll have to see how all the text renders there. The first two chapters are now completely done with copy-editing, which means we can do the final typesetting there!
&lt;/p&gt;
&lt;p&gt;
	We recorded two more Swift Talk episodes last week, both on our Git reimplementation. I think with a bit of effort this could actually be turned into a usable dependency-free Git implementation, although getting it secure and safe would probably be a major effort.
&lt;/p&gt;
&lt;p&gt;
	I picked up my running a bit over the last weeks. I finally feel like I have energy for that again (was heavily blocked by the move). I’m slow compared to last year, but only focusing on building out my endurance. I can maintain last year’s marathon pace maybe for one or two kilometers. However, I’m trying to keep a &lt;a href=&quot;https://fs.blog/carol-dweck-mindset/&quot;&gt;growth mindset&lt;/a&gt; and improve every day. The weather has been really nice here, and it’s been amazing to dip in the lake after a run. Also, we finally moved into our actual bedrooms. The flooring was only finished on Friday so we had to improvise a bit until then.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 05 Jun 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-22</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-22</guid>
		</item>
		<item>
			<title>Weeknotes № 21</title>
			<description>
				&lt;p&gt;
	We prepared and recorded episodes that reimplement the core data structures of Git in Swift (without any third-party dependencies). The model of Git is really simple — I think it’s beautiful. In the episodes we recorded everything is read-only, but I managed to get writing to work as well. The tricky part is that objects in git are stored with zlib compression, which requires both a (static) binary header as well as a checksum. I spent quite some time getting the checksum right — but at least the end result is not a lot of code.
&lt;/p&gt;
&lt;p&gt;
	We also continued working on all the diagrams, mostly focusing on animations and transitions this week. For example, this accompanies a section about implementing a custom animatable (shake) modifier:
&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chris.eidhof.nl/images/2023-05-29-shake.png&quot; title/&gt;&lt;/p&gt;
&lt;p&gt;
	I spent a lot of time with the kids and in the garden. We improved our watering setup (although I hope to get a better rainwater system soon) and I did a whole bunch of odd jobs that are nice to cross off the list.
&lt;/p&gt;
&lt;p&gt;
	Now that we moved in, I can really tell the difference in energy levels, especially when running. In hindsight, it kind of felt like I could only perform at 60% of my normal capacity (in life and in running). Now, I feel like I can do proper training again, even though I’m much slower than a year ago. But with time and patience I think I can get back towards running some good times again.
&lt;/p&gt;
			</description>
			<pubDate>Sun, 28 May 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-21</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-21</guid>
		</item>
		<item>
			<title>Weeknotes № 20</title>
			<description>
				&lt;p&gt;
	We added a whole lot more diagrams to the book. One thing we struggled with is how to visually separate certain parts, and how to relate them to the text. One of the things we are now able to do is color our text inline (or apply any other attributes). Our Markdown renderer now uses a custom type for string interpolation that lets us embed any other type that converts to attributed strings.
&lt;/p&gt;
&lt;p&gt;
	In &lt;a href=&quot;https://m.objc.io/@chris/110383108374505754&quot;&gt;this post&lt;/a&gt; you can see an example. The code is in our book repository, but I think we can move the Markdown-related infrastructure to our &lt;a href=&quot;https://github.com/objcio/attributed-string-builder&quot;&gt;attributed-string-builder&lt;/a&gt; repository.
&lt;/p&gt;
&lt;p&gt;
	On Friday, our fridge arrived. We managed fine without one, but life is much easier with a functional fridge. I also cooked a meal where almost all ingredients came from the garden, except the rice and egg (a rice bowl with spinach, radish, fresh salad and herbs). We have already used up all the radishes we planted, a lot of the spinach and some of the salad. Even though I already built four raised beds, I think I need to build at least a few more this year. Luckily, these are pretty quick to put together (for now, I just use scrap wood and don’t make them very tall).
&lt;/p&gt;
&lt;p&gt;
	I went for my first swim in the lake that’s across the street. Pretty cold, but really nice. In other water-related news, I also did a whole bunch of stuff in the garden, and I started the plumbing for our garden. I put all the lines above ground for now, to make sure there are no leaks and because we plan to build a terrace anyway.
&lt;/p&gt;
			</description>
			<pubDate>Sun, 21 May 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-20</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-20</guid>
		</item>
		<item>
			<title>Weeknotes № 19</title>
			<description>
				&lt;p&gt;
	We spent last week iterating on the book, mostly drawing diagrams. Because our understanding of SwiftUI has gotten much better since the previous release, we also have much better explanations and much better visuals. We also had to change some things in the underlying infrastructure, but that all worked out. Can’t wait to get this ready.
&lt;/p&gt;
&lt;p&gt;
	For a side project, I spent half a day researching how to sync data using CloudKit. It seems to be pretty easy. Last time I tried that, I had a hard time configuring things, and understanding how the pieces fit together, but it went without problems this time.
&lt;/p&gt;
&lt;p&gt;
	Before we moved in, we started planting a bunch of things in raised beds, and I built two more raised beds last week. We sowed most things ourselves, and bought some small plants as well. We harvested spinach, radish, salat and a number of herbs. It is such a luxury to walk outside into the garden and directly harvest what we need. It also makes me appreciate how much effort goes into this: even with a few large raised beds we would not even come close to growing what we would need to be self-sufficient.
&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chris.eidhof.nl/images/2023-05-14-garden.jpg&quot; title/&gt;&lt;/p&gt;
&lt;p&gt;
	Most of our kitchen arrived, which definitely helps in making the new house liveable. The main thing missing is the fridge, which is challenging but fine (we have a small portable cooler that holds the essentials for a family of four). Hopefully the fridge gets here soon.
&lt;/p&gt;
			</description>
			<pubDate>Sun, 14 May 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-19</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-19</guid>
		</item>
		<item>
			<title>Weeknotes № 18</title>
			<description>
				&lt;p&gt;
	For our book, I added support to draw nicer diagrams (with overlays on the arrows placed in exactly the right spot). I also changed the syntax highlighting so that we can generate custom attributed strings for certain parts. You can see both parts in action in &lt;a href=&quot;https://m.objc.io/@chris/110304502914075277&quot;&gt;this post&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
	We also finally moved into our new house! It’s not finished yet, so we had to already move between the two floors twice, but by next week we’ll (hopefully) have a finished kitchen, finished bathrooms and a ground floor that’s completely done.
&lt;/p&gt;
			</description>
			<pubDate>Sun, 07 May 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-18</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-18</guid>
		</item>
		<item>
			<title>Weeknotes № 17</title>
			<description>
				&lt;p&gt;
	We spent a lot of time working on laying out our book, and are getting much closer now. Even though we were “80%” done already, getting all the details right takes a lot of time and tweaking:
&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
		&lt;p&gt;
			We added internal links to the book
		&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;
			We added warnings for widows and orphans
		&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;
			We added support for print margins (i.e. margins that differ per page)
		&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;
			We added support to supress headers on title pages and empty pages (the header shows the chapter name and page number)
		&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;
			We added support for state to our attributed string builder library, this threads state through the rendering (useful for e.g. footnotes or numbering things)
		&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;
			We added a PDF outline to the book (the “table of contents” you see in Preview)
		&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;
			We tweaked all the small details (spacing, line height, list rendering, etc.)
		&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;
			We spent a long time going back and forth on different styles for rendering our diagrams. The view tree diagrams that we want to show have code, a preview and a diagram. Getting these all on a single page with a good layout wasn’t easy at all.
		&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
	I think we’re very close now to the output that we want. The main thing left is styling the diagrams further, not just the view tree diagrams but also render trees, layout trees, and so on.
&lt;/p&gt;
&lt;p&gt;
	Here’s a sample page showing the current state:
&lt;/p&gt;
&lt;img src=&quot;http://chris.eidhof.nl/images/tis-page.png&quot; style=&quot;width: 216&quot;&gt;

&lt;p&gt;
	We spent a lot of time with the family while over in The Netherlands, and for the first time in half a year, I ran more than 100kms this week. I’m looking forward to build that mileage out again.
&lt;/p&gt;
			</description>
			<pubDate>Sun, 30 Apr 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-17</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-17</guid>
		</item>
		<item>
			<title>Weeknotes № 16</title>
			<description>
				&lt;p&gt;
	At the start of the week, I worked on making our (private) SwiftUI library for drawing tree diagrams a bit simpler. It has code for both drawing the diagrams as well as parsing the type of a view and turning that into an interactive diagram. I separated that into two packages and simplified the tree diagramming library.
&lt;/p&gt;
&lt;p&gt;
	On Tuesday we recorded some Swift Talk episodes, and on Wednesday I spent time around the new house and with the family.
&lt;/p&gt;
&lt;p&gt;
	On Thursday and Friday, Florian and me sat down to finally start typesetting &lt;a href=&quot;https://www.objc.io/books/thinking-in-swiftui/&quot;&gt;Thinking in SwiftUI&lt;/a&gt;. We tackled a whole bunch of stuff: the cover pages, much of the typography, highlighting, styling, and so on. A bunch of this code is in the &lt;a href=&quot;https://github.com/objcio/attributed-string-builder&quot;&gt;attributed string builders&lt;/a&gt; package. We still need to add tests and documentation for those features, but for now, we just build what we need and test it by looking at the generated PDF.
&lt;/p&gt;
&lt;p&gt;
	I’m still not sure whether or not us writing the book generation ourselves (on top of attributed strings and TextKit) is a good idea, but it definitely is a lot of fun. For now it still seems very promising and much easier to write than LaTeX or using a program like InDesign. But let’s see what we think about this in a few years from now…
&lt;/p&gt;
&lt;p&gt;
	We left our temporary holiday home and went on a trip to visit our family in The Netherlands. When we get back, we’ll officialy and finally move into (the ground floor of) the new house. Very exciting!
&lt;/p&gt;
			</description>
			<pubDate>Sun, 23 Apr 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-16</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-16</guid>
		</item>
		<item>
			<title>Weeknotes № 15</title>
			<description>
				&lt;p&gt;
	In Germany everyone gets time off for easter, and we spent time with friends and family. We also planted a bunch more things, really looking forward to summer where we’ll have a lot of fresh vegetables. We’re trying out a bunch of new things, so excited to see how well everything goes. The spinach, salad and onions are cropping up already.
&lt;/p&gt;
&lt;p&gt;
	I worked on getting our book building software up to date. There are many dependencies (rendering using attributed strings, drawing diagrams, our own layout implementation to help generate explanations, and so on). We were still depending on an internal version of &lt;a href=&quot;https://github.com/objcio/attributed-string-builder&quot;&gt;attributed-string-builder&lt;/a&gt; which was essentially an extend subset of the public repository.
&lt;/p&gt;
&lt;p&gt;
	I configured everything to (hopefully) be a very low-friction experience. I set up single Xcode project with virtually all code in Swift packages. For editing, we can just drop the package into the Xcode project and have a local editable version.
&lt;/p&gt;
&lt;p&gt;
	While we wrote the book using Dropbox Paper, we now are typesetting it using attributed strings. All of our previous published books were typeset using a mix of homegrown scripts, Pandoc, LaTeX and a bunch of other stuff. We always had the full setup working on at least one machine, but we decided to try a different setup for this release.
&lt;/p&gt;
&lt;p&gt;
	I also worked on a simple “connecting the dots” view to draw lines between arbitrary views in the view hierarchy. This works by propagating the center of each of the icons up (using anchors), and then drawing lines between all the connections. This technique is useful beyond this example, of course:
&lt;/p&gt;
&lt;p&gt;
	&lt;picture class=&quot;swiftui&quot;&gt;
		&lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;http://chris.eidhof.nl/post/2023-15/1-dark.png 2x&quot;/&gt;
		&lt;img srcset=&quot;http://chris.eidhof.nl/post/2023-15/1.png 2x&quot; style=&quot;width: auto;&quot;/&gt;
	&lt;/picture&gt;
&lt;/p&gt;
&lt;p&gt;
	I’ll try to either write this up as a blog post or we’ll record it for Swift Talk.
&lt;/p&gt;
&lt;p&gt;
	The painter spent last week painting the house, I helped with a bunch of preparation and final details. Next week we’ll get the flooring done on the ground floor, and in a few more weeks we’ll finally move in!
&lt;/p&gt;
			</description>
			<pubDate>Sun, 16 Apr 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-15</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-15</guid>
		</item>
		<item>
			<title>Weeknotes № 14</title>
			<description>
				&lt;p&gt;
	I worked a bit on porting some “older” features we had in our test implementation of attributed string builder, and added them to our &lt;a href=&quot;https://github.com/objcio/attributed-string-builder&quot;&gt;public repository&lt;/a&gt;. We’re planning to use that for publishing our book. We want back and forth a lot, but we believe it’s easier to work with our own implementation based off of attributed strings than trying to wrangle LaTeX or desktop programs such as InDesign into the layout we want. By using attributed strings, we can write our book while automatically having our code checked, syntax highlighted and have proper previews.
&lt;/p&gt;
&lt;p&gt;
	I wrote a &lt;a href=&quot;https://github.com/chriseidhof/swiftui-video-recording&quot;&gt;small library&lt;/a&gt; that helps me to record a SwiftUI view as an mp4 video. I always find it annoying to precisely record a video of an interaction, transition or animation, and this should hopefully make it a little bit easier, as it records exactly the bounds of a view: I don’t have to fiddle with positioning QuickTime or hope I get the timing right.
&lt;/p&gt;
&lt;p&gt;
	I also wrote up a quick blog post about &lt;a href=&quot;http://chris.eidhof.nl/post/matched-geometry-effect&quot;&gt;matched geometry effect&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
	I was really tired from the move last week, and this week went pretty slow because of that. I didn’t even have the energy for my daily run, but instead of fighting that I just rested. I started preparing an upcoming workshop, working a bit on the book (we forgot to write about EnviromentObject). While I did feel very tired, I am also way less stressed now that it’s only the final bits of the house.
&lt;/p&gt;
&lt;p&gt;
	We spent a few days in and around our new house, cleaning things, building more raised beds, and so on. It feels pretty great to do that now that spring is really starting.
&lt;/p&gt;
			</description>
			<pubDate>Sun, 09 Apr 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-14</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-14</guid>
		</item>
		<item>
			<title>When Matched Geometry Effect Doesn&apos;t Work</title>
			<description>
				&lt;p&gt;
	One of the SwiftUI APIs that always kept confusing me is matchedGeometryEffect. I often thought I could use it but couldn’t figure out exactly how to make it work, always getting weird effects. I tried to distill the problematic code down to the essence:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;swift&quot;&gt;struct ContentView: View {
    @State private var detail = false
    @Namespace private var ns

    var body: some View {
        ZStack {
            if detail {
                Color.red
                    .frame(width: 100, height: 100)
                    .matchedGeometryEffect(id: &amp;quot;rect&amp;quot;, in: ns)
            } else {
                Color.red
                    .frame(width: 300, height: 300)
                    .matchedGeometryEffect(id: &amp;quot;rect&amp;quot;, in: ns)
            }
        }
        .animation(.default, value: detail)
        .onTapGesture {
            detail.toggle()
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
	When you run the code above, you will see that there is something like a transition between the two red squares, but there’s nothing smooth about it. Why doesn’t the small square grow bigger, and why doesn’t the large square grow smaller? They only seem to shift.
&lt;/p&gt;
&lt;video class=&quot;light-video&quot; width=&quot;320&quot; height=&quot;320&quot; autoplay playsinline muted loop&gt;
   &lt;source src=&quot;http://chris.eidhof.nl/movies/mge-light.mp4&quot; type=&quot;video/mp4&quot;&gt;
  Your browser does not support the video tag.
&lt;/video&gt;
&lt;video class=&quot;dark-video&quot; width=&quot;318&quot; height=&quot;318&quot; autoplay playsinline muted loop&gt;
   &lt;source src=&quot;http://chris.eidhof.nl/movies/mge-dark.mp4&quot; type=&quot;video/mp4&quot;&gt;
  Your browser does not support the video tag.
&lt;/video&gt;

&lt;p&gt;
	What helped me understand is &lt;a href=&quot;https://talk.objc.io/episodes/S01E260-matched-geometry-effect-part-3&quot;&gt;reimplementing matchedGeometryEffect&lt;/a&gt;. While there is a bit more to it, the matched geometry effect will essentially apply a &lt;code&gt;frame&lt;/code&gt; and an &lt;code&gt;offset&lt;/code&gt; modifier. Let’s consider only the if-branch:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;swift&quot;&gt;Color.red
    .frame(width: 100, height: 100)
    .matchedGeometryEffect(id: &amp;quot;rect&amp;quot;, in: ns)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
	If we virtually “inline” the matched geometry effect, the code looks like this:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;swift&quot;&gt;Color.red
    .frame(width: 100, height: 100)
    .offset(x: &amp;lt;matchedX&amp;gt;, y: &amp;lt;matchedY&amp;gt;)
    .frame(width: &amp;lt;matchedWidth&amp;gt;, height: &amp;lt;matchedHeight&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
	While the outer frame and offset will have an effect on where the view is positioned, we can see that the inner frame will ultimately control the size, overriding the proposed size of the outer frame modifier. In other words: the red square will &lt;em&gt;always&lt;/em&gt;
	 render at 100⨉100.
&lt;/p&gt;
&lt;p&gt;
	To fix this, we need to change the order of our modifiers so that the &lt;code&gt;matchedGeometryEffect&lt;/code&gt; is directly applied to the color. As the color is completely flexible, this doesn’t cause any problems. Here’s the changed &lt;code&gt;if&lt;/code&gt; branch, the &lt;code&gt;else&lt;/code&gt; branch needs to change as well:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;swift&quot;&gt;Color.red
     .matchedGeometryEffect(id: &amp;quot;rect&amp;quot;, in: ns)
     .frame(width: 100, height: 100)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
	Now our rectangle animates smoothly between the two states:
&lt;/p&gt;
&lt;video class=&quot;light-video&quot; width=&quot;318&quot; height=&quot;318&quot; autoplay playsinline muted loop&gt;
   &lt;source src=&quot;http://chris.eidhof.nl/movies/mge-fixed-light.mp4&quot; type=&quot;video/mp4&quot;&gt;
  Your browser does not support the video tag.
&lt;/video&gt;
&lt;video class=&quot;dark-video&quot; width=&quot;318&quot; height=&quot;318&quot; autoplay playsinline muted loop&gt;
   &lt;source src=&quot;http://chris.eidhof.nl/movies/mge-fixed-dark.mp4&quot; type=&quot;video/mp4&quot;&gt;
  Your browser does not support the video tag.
&lt;/video&gt;

&lt;p&gt;
	(Of course, the above animation could be done in a much simpler way by removing the if/else, but I wanted to work with a minimal example that uses matched geometry effect.)
&lt;/p&gt;
			</description>
			<pubDate>Tue, 04 Apr 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/matched-geometry-effect</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/matched-geometry-effect</guid>
		</item>
		<item>
			<title>Weeknotes № 13</title>
			<description>
				&lt;p&gt;
	We spent a lot of last week moving our stuff, culminating on Friday where we had to actually leave our old place. This was pretty stressful with two kids running around, and the oldest getting pretty sick at the beginning of the week. But we managed, all of our stuff is in the basement of the new place and we are in a furnished apartment for the next weeks.
&lt;/p&gt;
&lt;p&gt;
	A lot of stuff got done: the tilers finished the upstairs bathroom and unexpectedly also finished the downstairs one, the electricity is mostly done, and the painter painted two more rooms. Now it’s a bit of a waiting game where little will happen next week, but hopefully everything should be finished somewhere around the end of this month.
&lt;/p&gt;
&lt;p&gt;
	We also prepared and recorded a bunch of Swift Talk episodes in which we reimplemented SwiftUI’s anchors from “scratch” (only using preferences and geometry readers). Doing this gave us a lot of insight into how these actually work and their limitations. We reimplemented parts of SwiftUI many times (anchors, &lt;a href=&quot;https://talk.objc.io/episodes/S01E260-matched-geometry-effect-part-3&quot;&gt;matched geometry effect&lt;/a&gt;, the &lt;a href=&quot;https://talk.objc.io/collections/swiftui-layout-explained&quot;&gt;layout system&lt;/a&gt;, the &lt;a href=&quot;https://talk.objc.io/collections/swiftui-state-explained&quot;&gt;state system&lt;/a&gt;) and every time we learn a lot about how these things work. We also get feedback from other people that it helps them, which is always nice.
&lt;/p&gt;
&lt;p&gt;
	I’ve been working on a pure Swift implementation of Git’s core data model recently, and can currently read out (simple) repositories and their objects (commits, trees, and blobs). On the train back from the studio I also managed to read out Packfiles. I’d like to add support for writing things as well as adding support for the index. At its core, git truly is simple and beautiful, even though I’m the first to admit that the interface has often confused me.
&lt;/p&gt;
&lt;p&gt;
	We started preparing for another workshop sometime at the middle of this month, should be really fun. We’ve gotten into a really good flow where we know exactly what topics to cover, but can still create a completely custom workshop for the team we’re working with. One of the things I’m also pretty happy about is that we have a hard limit on team sizes (sixteen people max) so that we can really make it personal and spend a decent amount of time with all the individual attendees. Preparing and running the workshops is pretty stressful but also very rewarding.
&lt;/p&gt;
&lt;p&gt;
	Another random thought that occupied me a bit is that my nationality never felt like a big part of my identity while I lived in the Netherlands, but does so now. Even when I emigrated to Berlin it was never a big deal – there were so many foreigners in my little bubble there that I hardly ever stood out. However, here on the countryside, it’s a different story. There are a lot of people that are from here and have never really been anywhere else. It feels like even Germans from other parts of Germany stand out, let alone foreigners like me. I don’t really mind, but it’s been an interesting observation.
&lt;/p&gt;
&lt;p&gt;
	I’ve also been thinking about AI a bit recently (who hasn’t?). I don’t have a very strong opinion on the topic, I believe it’ll change our daily lives (especially for us computer people), but I don’t feel like anyone can really predict &lt;em&gt;how&lt;/em&gt;
	 it’ll change things. I’m not sure whether it’ll be good or bad (probably both?). One of my favorite bloggers on the topic is &lt;a href=&quot;https://simonwillison.net&quot;&gt;Simon Willison&lt;/a&gt;, who’s doing pretty practical experiments as well as trying to take a more high-level view.
&lt;/p&gt;
&lt;p&gt;
	I’ve experimented with ChatGPT to do generate sample data (for our workshops), and it was great at that, even providing JSON data and matching Swift structs that conform to &lt;code&gt;Codable&lt;/code&gt;. I tried using it to generate some algorithms that I know (e.g. a flow layout) but I’m not quite comfortable giving that part up (even though it did do a pretty good job). It also is useful for generating ideas. For example, I let it generate ten or twenty ideas for marketing our new book. Much of it isn’t stuff I couldn’t think of myself, but there were one or two things that I could definitely use. I don’t personally feel like letting it do things that feel important to me – most of programming, writing, and other forms of communication.
&lt;/p&gt;
			</description>
			<pubDate>Sun, 02 Apr 2023 00:00:00 +0200</pubDate>
			<link>http://chris.eidhof.nl/post/2023-13</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2023-13</guid>
		</item>
	</channel>
</rss>