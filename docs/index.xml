<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Chris Eidhof</title>
		<description>
			Personal Blog
		</description>
		<link>http://chris.eidhof.nl</link>
		<atom:link href="http://chris.eidhof.nl/feed.xml" rel="self" type="application/rss+xml"/>
		<item>
			<title>Weeknotes № 46</title>
			<description>
				&lt;p&gt;
	I’m writing this week’s notes from London. I traveled here by train, it was a bit more of a hassle compared to my regular train rides (security/border control) but still a lot nicer than flying. On my way to London I stopped over in The Netherlands to do two days of hiking with my friends.
&lt;/p&gt;
&lt;p&gt;
	In our workshops, the people in each group have different experiences and work at different speeds. Therefore, we always include plenty of bonus exercises. Most of the bonus exercises are reusable, whereas the main exercises are almost all specific to the company we work with.
&lt;/p&gt;
&lt;p&gt;
	We refined and tweaked the bonus material over the last few years. This week, I created new bonus exercises to replace some of the old ones. The new bonus material is more self-contained, more concise, and focuses on some newer topics. For example, the bonus exercise for animations now contains an exercise about keyframe animations.
&lt;/p&gt;
&lt;p&gt;
	After figuring out more Attribute Graph internals we finally had the confidence to start our reimplementation of it. The &lt;a href=&quot;https://talk.objc.io/episodes/S01E429-attribute-graph-part-1&quot;&gt;first episode&lt;/a&gt; came out last Friday. We’re first building out the dependency tracking mechanism, and then we’ll make it more SwiftUI-specific.
&lt;/p&gt;
&lt;p&gt;
	The &lt;a href=&quot;https://www.youtube.com/watch?v=CPzf_0tRwcE&quot;&gt;video&lt;/a&gt; of &lt;a href=&quot;https://chris.eidhof.nl/presentations/swiftui-animations/&quot;&gt;my presentation on SwiftUI Animations&lt;/a&gt; came out last week. It’s the first time I’m using my new presentation tool, and while it wasn’t perfect, it did end up going pretty well.
&lt;/p&gt;
&lt;p&gt;
	I spent a bunch more time riding my gravel bike which was really fun. It’s starting to get properly cold now. I had my first flat (within a week of owning the new bike). I suspect it was something with the valve, but I’m not sure. In any case, I ordered a tubeless kit and once I’m back from London I’ll convert the bike to a tubeless setup.
&lt;/p&gt;
&lt;p&gt;
	My Zettelkasten is filling up with articles about SwiftUI, animations and some about therapy. I’m at 51 notes now, I doubt it’ll keep growing that quickly but let’s see.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate>
			<link>http://chris.eidhof.nl/post/2024-46</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-46</guid>
		</item>
		<item>
			<title>Weeknotes № 45</title>
			<description>
				&lt;p&gt;
	Last week I mostly spent preparing for two upcoming workshops. We have a good outline for our &lt;a href=&quot;https://www.swiftuifieldguide.com/workshops/&quot;&gt;SwiftUI Workshop&lt;/a&gt;, yet customize each workshop heavily for the client we work with. Once we know what exercises to do, we create a new repository with the starting point for exercise 1, then a commit for each exercies. It’s been helpful to use either &lt;a href=&quot;https://retcon.app&quot;&gt;Retcon&lt;/a&gt; or &lt;a href=&quot;https://github.com/martinvonz/jj&quot;&gt;Jujutsu&lt;/a&gt; to rewrite history and add pieces to older commits.
&lt;/p&gt;
&lt;p&gt;
	I spent more time exploring how the attribute graph works in SwiftUI. One useful thing I did was extracting all the named symbols using &lt;code&gt;nm -C&lt;/code&gt;, then feeding that into an LLM to get a description of &lt;code&gt;AttributeGraph.framework&lt;/code&gt;. This is what came out: &lt;a href=&quot;https://gist.github.com/chriseidhof/c6037948c1e6c1639fa19f891dfa368c&quot;&gt;transcript.md&lt;/a&gt;. I’ve also tried modeling an AG-based SwiftUI layout system with some success. At first, I was stumped about how to do this in an acyclic way, but I think I have something figured out now (not sure if it’s how SwiftUI does it, though). Once I feel more comfortable that it’s correct, I’ll try to write about it.
&lt;/p&gt;
&lt;p&gt;
	I still have my foot injury and hope it will go away by waiting it out, so can’t do any running. This has easily been the longest I’ve been without running, but luckily, I’ve been really enjoying gravel biking. I went for a few nice rides last week. I got a new bike as well (Canyon Grizl), I think I’ll prepare my older bike for indoor training and then for road cycling. On Sunday I rode for quite a long time in the cold and after about an hour and a half I noticed I was starting to get a little cold, slightly drowsy and (in hindsight) some other signs of early hypothermia. I thought I’d dressed warm enough, but will definitely need to up my layering for long rides.
&lt;/p&gt;
&lt;p&gt;
	I had an appointment to get my passport renewed and had to go to Berlin. One of the best parts was getting coffee with &lt;a href=&quot;https://nicholaschristowitz.com&quot;&gt;Nicholas&lt;/a&gt; afterwards. I had a miso chocolate chip cookie which was absolutely delicious. A few days later I tried baking some myself and they turned out quite nice but not nearly as good as the ones I had in Berlin. I’ll try some other recipes as well, there’s definitely room for improvement.
&lt;/p&gt;
&lt;p&gt;
	I’m trying out yet another note taking form, Zettelkasten. So far it seems to work well and I like the things it promises (better/easier writing). Often, I’m most excited about tools as I start using them, let’s see how this holds up in a few months.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 11 Nov 2024 00:00:00 +0000</pubDate>
			<link>http://chris.eidhof.nl/post/2024-45</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-45</guid>
		</item>
		<item>
			<title>Weeknotes № 44</title>
			<description>
				&lt;p&gt;
	Going to &lt;a href=&quot;http://pragmamark.org&quot;&gt;pragma&lt;/a&gt; was awesome as always. We went with the whole family and took so many trains! (I even got a status upgrade by Deutsche Bahn and am now a gold member.)
&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
		&lt;p&gt;
			Fürstenberg → Berlin
		&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;
			Berlin → München
		&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;
			München → Kufstein
		&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;
			Kufstein → Innsbruck
		&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
	We then stayed in Innsbruck for two nights, and went on to Verona by taking two more trains:
&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
		&lt;p&gt;
			Innsbrück → Brenner
		&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;
			Brenner → Verona
		&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
	After a night in Verona, we took a train straight to Bologna and a bus to top it off. The kids also really enjoyed all the travel. We did a reasonable job with packing, but should probably have packed lighter still. Our way back from Bologna was much easier: it only took us one train to get to Munich, and two more trains the next day to get home. We would definitely do something like this again.
&lt;/p&gt;
&lt;p&gt;
	I managed to implement a very basic version of the attribute graph based on &lt;a href=&quot;https://citeseerx.ist.psu.edu/document?repid=rep1&amp;type=pdf&amp;doi=9609985dbef43633f4deb88c949a9776e0cd766b&quot;&gt;this paper&lt;/a&gt;. It seems to work for basic stuff, but I’m not 100% sure yet how to do all the SwiftUI-specific things. For example, how does layout work? The parent proposes a size, so the child is dependent on that. Yet the child may at a later point change its state and the parent needs to relayout.
&lt;/p&gt;
&lt;p&gt;
	My talk at Pragma went well. I had my talk ready a few weeks before the conference, yet like to practice a lot in the days before the actual talk. Due to the kids and traveling, I was only able to go through my talk twice in the final week, but it still went okay. In general, there were a lot of great talks and conversations at the conference.
&lt;/p&gt;
&lt;p&gt;
	For most things I have been using &lt;a href=&quot;https://github.com/martinvonz/jj&quot;&gt;jj&lt;/a&gt; instead of git as my daily driver. It works surprisingly well. In my career I’ve used CVS, SVN and git. Each always felt like a big step forward and somehow made the previous tool feel old and outdated. jj has a similar effect for me.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 04 Nov 2024 00:00:00 +0000</pubDate>
			<link>http://chris.eidhof.nl/post/2024-44</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-44</guid>
		</item>
		<item>
			<title>Weeknotes № 42-43</title>
			<description>
				&lt;p&gt;
	I’m still not running but really enjoying the biking. If my injury doesn’t improve soon I’ll start looking for some treatment instead. However, biking doesn’t cause any pain so maybe I should just keep enjoying that and not do anything else for a while.
&lt;/p&gt;
&lt;p&gt;
	After my trip to Paris last month, we decided to go to Bologna, Italy by train, but this time with the whole family. We made two stops along the way (in Innsbruck and Verona) and after 9 trains and one bus we made it to Bologna. The &lt;a href=&quot;https://pragmaconference.com&quot;&gt;pragma conference&lt;/a&gt; is always super fun, even though I haven’t been for a few years.
&lt;/p&gt;
&lt;p&gt;
	I started playing around with &lt;a href=&quot;https://martinvonz.github.io/jj/latest/&quot;&gt;jujutsu&lt;/a&gt; last week. I’ll try to experiment with it more, it looks to be extremely useful for some of my workflows with git (specifically rewriting history and editing older commits). At the moment, I use &lt;a href=&quot;https://retcon.app&quot;&gt;Retcon&lt;/a&gt; for this (which is awesome).
&lt;/p&gt;
&lt;p&gt;
	I started a &lt;a href=&quot;http://github.com/chriseidhof/til&quot;&gt;TIL&lt;/a&gt; repository, let’s see if I can keep it up.
&lt;/p&gt;
&lt;p&gt;
	I played around a bit with sqlite. It’s still kind of weird that there’s no one way to create personal databases these days. For example, I’d like to create an invoice system that’s backed by sqlite, but it’s so much code to write this. I’d like to make this easier.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 28 Oct 2024 00:00:00 +0000</pubDate>
			<link>http://chris.eidhof.nl/post/2024-43</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-43</guid>
		</item>
		<item>
			<title>Weeknotes № 41</title>
			<description>
				&lt;p&gt;
	It looks to be quite a busy end-of-the-year, after a few months of focusing on other stuff there’ll be a batch of workshops all at once, mostly on location (which is more time and cost intensive, but also definitely more fun). I’ve been preparing a bunch, and also preparing a lot more background material. I’m hoping to integrate some of the things from my presentations as well, for example, the fake animation debugger from my &lt;a href=&quot;https://chris.eidhof.nl/presentations/swiftui-animations/&quot;&gt;Swift Connection talk&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
	One of the libraries I’ve used throughout the last months is my Mac &lt;a href=&quot;https://github.com/chriseidhof/dynamic-type&quot;&gt;Dynamic Type&lt;/a&gt; library. I took the iOS dynamic type sizes and replicated the dynamic type API so that my Mac apps (or fake simulator previews) can have dynamic type support as well. This has been great for presentations (I can just increase the font size &lt;em&gt;and&lt;/em&gt;
	 everything else related to that because most things have a &lt;code&gt;@ScaledMetric&lt;/code&gt; in front of them). It’s also super useful in our &lt;a href=&quot;https://www.swiftuifieldguide.com/workshops/&quot;&gt;workshop app&lt;/a&gt;, and we’re working on adding some more support for that as well.
&lt;/p&gt;
&lt;p&gt;
	I’ve played around with a few more “reusable” bonus exercises for our workshop. It’s really hard to find good exercises that teach a subject, are realistic and yet small enough that you can solve it in a short timeframe. However, when you do find good examples, it’s quite rewarding.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 14 Oct 2024 00:00:00 +0100</pubDate>
			<link>http://chris.eidhof.nl/post/2024-41</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-41</guid>
		</item>
		<item>
			<title>Weeknotes № 41</title>
			<description>
				&lt;p&gt;
	As we are now tied to the school holidays, we made the best off of a few consecutive days off and went to the Netherlands to visit family last week. I did not bring my bike and went for a single bike ride on a mountain bike (on the completely flat roads). I did go for my first run in months, which was awesome. It was much harder than I remember running to be and I definitely had all kinds of soreness, but my injury didn’t get any worse.
&lt;/p&gt;
&lt;p&gt;
	I worked a bit on my presentation for &lt;a href=&quot;https://pragmaconference.com&quot;&gt;Pragma Conference&lt;/a&gt;. Really looking forward to meeting everyone there as well as giving my talk. Because it’s the end of the year, all of a sudden we had a bunch of workshop requests, most of which are still not fully confirmed. Even though there’s just one quarter left, it’s not possible to tell whether the end of this year will be extremely busy or not.
&lt;/p&gt;
&lt;p&gt;
	I also spent last week rewriting some of the internals of my typing recorder. It’s now a little easier for me to edit mistakes. This doesn’t work perfectly yet and there’s always a possibility of an edit breaking the entire document. I should probably at the very least implement undo and redo.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 07 Oct 2024 00:00:00 +0100</pubDate>
			<link>http://chris.eidhof.nl/post/2024-40</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-40</guid>
		</item>
		<item>
			<title>Weeknotes № 40</title>
			<description>
				&lt;p&gt;
	Last week I went to Paris to speak at &lt;a href=&quot;https://swiftconnection.io&quot;&gt;Swift Connection&lt;/a&gt;. This was really fun — I met new and old friends and it was generally really nice to be among other Swift developers (in our tiny town I’m the only one).
&lt;/p&gt;
&lt;p&gt;
	My presentation was about different techniques available for building SwiftUI animations. This was the first time I used the new “play back typing” tool during a presentation. This went really well, there was a small hiccup but luckily someone in the audience caught it and called it out. While the talk was still fresh I recorded a version at home and &lt;a href=&quot;https://chris.eidhof.nl/presentations/swiftui-animations/&quot;&gt;published it here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
	The train ride back from Paris to Fürstenberg went well, too. I was able to spend a lot of that time working productively. I have no numbers, but when I think about it purely in terms of efficiency: the whole hassle of flying (going to the airport, waiting, checking in, and so on) is a lot more stressful to me, and I wonder if I could have gotten any more work done, even with the few hours saved.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 30 Sep 2024 00:00:00 +0100</pubDate>
			<link>http://chris.eidhof.nl/post/2024-39</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-39</guid>
		</item>
		<item>
			<title>Weeknotes № 39</title>
			<description>
				&lt;p&gt;
	I spent most of last week preparing for my talk in Paris (which is this week). I’ll be doing a code-typing-simulation on stage, where it looks as if someone’s typing but in reality it’s me pressing the keys on the presentation clicker. I made big improvements to “both parts” of the technology behind it: it’s now much easier for me to record things, and the playback works better as well. The cool thing is that the presentation fully supports dynamic type on the Mac, so even during the presentation I’m able to resize things if needed.
&lt;/p&gt;
&lt;p&gt;
	I’m still injured and have really been enjoying the gravel riding. Both my technique and my bike-specific endurance get a little better every week, which is always a great feeling. I don’t really miss the running, except when I pack for a trip and don’t bring any running gear.
&lt;/p&gt;
&lt;p&gt;
	I’m trying to fly less, and both of my trips this month have been long international train rides. Even the 10 hour train ride to Paris went really well, I was able to just sit, look out the window, work, listen to things and read. For some reason it felt more relaxing than a short flight.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 23 Sep 2024 00:00:00 +0100</pubDate>
			<link>http://chris.eidhof.nl/post/2024-38</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-38</guid>
		</item>
		<item>
			<title>Phase Animator Behavior</title>
			<description>
				&lt;p&gt;
	I’m currently still busy researching all the animation APIs in SwiftUI. I’d like to understand them at such a level that I have either my own working implementation or know how to build it.
&lt;/p&gt;
&lt;p&gt;
	With &lt;code&gt;PhaseAnimator&lt;/code&gt;, I always was a little confused as to how it actually works and why it sometimes seems to skip phases. Here’s what I think is going on:
&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
		&lt;p&gt;
			Initially the content closure of the phase animation is rendered using the first phase provided
		&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;
			When you start a phase animation (either using the trigger or automatically by not providing a trigger), it calls the animation closure to determine the timing curve and animates to the next phase.
		&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;
			When there are no more phases, it animates back to the initial phase.
		&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
	Sounds simple enough. I wanted to do an animation where a view would move up a bit, then wait there and finally move back down. Here’s what I did to have the view move up and back down:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;swift&quot;&gt;struct ContentView: View {
    @State private var trigger = 0

    var body: some View {
        Image(systemName: &amp;quot;globe&amp;quot;)
            .phaseAnimator([0, -100], trigger: trigger) { view, phase in
                view.offset(y: phase)
            }
            .onTapGesture { trigger += 1}
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
	This works fine: whenever the trigger changes, the &lt;code&gt;.default&lt;/code&gt; animation is used to move to offset -100, then when that animation completes the view moves back to 0 using another &lt;code&gt;.default&lt;/code&gt; animation.
&lt;/p&gt;
&lt;p&gt;
	I thought I could let the view stay at -100 by just adding another phase with -100 to the array of phases, but unfortunately, that does not work, it just moves from 0 to -100 and back to 0 without staying at -100.
&lt;/p&gt;
&lt;p&gt;
	When I naively tried to reimplement &lt;code&gt;PhaseAnimator&lt;/code&gt; I got the same behavior. My implementation works by first animating from the first to the second phase, and in the completion handler I’d animate to the next phase, and so on.
&lt;/p&gt;
&lt;p&gt;
	It took me a minute to realize why my code was behaving the same way. When you change a view’s position from (say) -100 to -100 the attribute graph does not change. The nodes are exactly the same before and after the update, and there is nothing to be animated. When there are no concrete animations, the animation’s completion handler is called immediately. In other words, we’re moving to the next phase straight away.
&lt;/p&gt;
&lt;p&gt;
	To solve the actual problem I had, I instead added a delayed animation when animating back to the initial phase:
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Image(systemName: &amp;quot;globe&amp;quot;)
    .phaseAnimator([0, -100], trigger: trigger) { view, phase in
        view.offset(y: phase)
    } animation: { offset in
        offset == 0 ? .default.delay(1) : .default
    }
    .onTapGesture { trigger += 1}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
	This works as expected: the view animates to -100, stays there for a second and then animates back to 0.
&lt;/p&gt;
			</description>
			<pubDate>Sun, 22 Sep 2024 00:00:00 +0100</pubDate>
			<link>http://chris.eidhof.nl/post/phase-animator</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/phase-animator</guid>
		</item>
		<item>
			<title>Weeknotes № 38</title>
			<description>
				&lt;p&gt;
	A long time without weeknotes! I have been pretty busy and totally neglected this blog. I was at a wedding last night and when prompted by Joris about the weeknotes I realized I should get back to it.
&lt;/p&gt;
&lt;p&gt;
	So much stuff happened. As a family we went on a cycling holiday. We loaded up the bikes and started cycling from home to a camping spot a few hours away. It was very refreshing to just sleep in a tent, cook basic meals, and be outdoors all the time. There were definitely some adventurous parts as well – trying to move a heavily loaded cargo bike including a two year old through loose sand and over bridges with just stairs was not something we had planned, but lots of fun in hindsight.
&lt;/p&gt;
&lt;p&gt;
	Over the last years, I have used live coding as my preferred presentation format. I prefer the “honesty” of showing the actual code and steps to get there rather than dumping a large blob of code. However, it is a little error-prone and I can imagine it can possibly be frustrating to watch someone type too slowly make mistakes.
&lt;/p&gt;
&lt;p&gt;
	Last summer, I built a tool that lets me type in Swift code while recording the keystrokes. I can then play back those keystrokes at a configurable speed, show the corresponding previews and also record the interactions with the previews. This ultimately gives me the “source” to produce something that feels like a video but is in reality just text and live previews. I plan to use this for workshop explanations, presentations or possibly short videos for social media. However, the project has been gathering dust for over a year, until I finally continued working on it a few weeks ago.
&lt;/p&gt;
&lt;p&gt;
	The context for that is that I’m preparing a workshop about the SwiftUI animation subsystem. I’ve been diving very deep into animations, both at the practical level (how does it work in SwiftUI) as well as the theoretical level (continuity of animations, timing curves, motion design, etc.). I’ll now have to find a way to turn all of that information into something teachable. My plan is to provide this workshop both to companies (a bespoke in-house training session) as well as in the form of a course that individuals can buy online. For the latter, I’m planning to use the “recording” project in order to show people my solutions to the exercises.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 16 Sep 2024 00:00:00 +0100</pubDate>
			<link>http://chris.eidhof.nl/post/2024-37</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-37</guid>
		</item>
		<item>
			<title>Weeknotes № 23-24</title>
			<description>
				&lt;p&gt;
	I ran another workshop (distributed across Australia, India and Turkey). I also started helping out at our local hackerspace again by teaching kids HTML for a few weeks. I went to Berlin and had my professional picture taken, and recorded &lt;a href=&quot;https://talk.objc.io/&quot;&gt;Swift Talk episodes&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
	Last week, I went to Cupertino for WWDC. It was so good seeing everyone again. I did not win the WWDC lottery but went to &lt;a href=&quot;https://omt-conf.com&quot;&gt;One More Thing&lt;/a&gt; instead, and met a bunch of friends around that. Afterwards, I spent a night with friends in San Francisco and went for some really nice runs.
&lt;/p&gt;
&lt;p&gt;
	The upcoming week marks one of the final workshops for a while – now it’s time to focus on the &lt;a href=&quot;https://www.swiftuifieldguide.com&quot;&gt;Field Guide&lt;/a&gt; again.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 17 Jun 2024 00:00:00 +0100</pubDate>
			<link>http://chris.eidhof.nl/post/2024-24</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-24</guid>
		</item>
		<item>
			<title>Weeknotes № 21</title>
			<description>
				&lt;p&gt;
	When I started, I managed to write weekly weeknotes, then the schedule changed to bi-weekly weeknotes and now it’s been three weeks. I’ve had a pretty busy few weeks behind me with preparing and teaching workshops, preparing my talk at &lt;a href=&quot;https://omt-conf.com&quot;&gt;One More Thing&lt;/a&gt;, national holidays, sick kids and other life things.
&lt;/p&gt;
&lt;p&gt;
	My talk will be about animations in SwiftUI, and together with &lt;a href=&quot;https://www.juulspee.nl&quot;&gt;Juul&lt;/a&gt; and &lt;a href=&quot;https://nicholaschristowitz.com/projects/swiftuifieldguide/&quot;&gt;Nick&lt;/a&gt; we’re designing and implementing some (hopefully) very helpful visualizations. Because most of my work stuff feeds back into each other, we’ll be able to use this for the talk, during the workshops and hopefully on the SwiftUI Field Guide as well.
&lt;/p&gt;
&lt;p&gt;
	During the preparations I realized a new way to debug animations in SwiftUI that lets you stop an animation at any point in time. Florian and me recorded &lt;a href=&quot;https://talk.objc.io/episodes/S01E405-debugging-animations&quot;&gt;an episode&lt;/a&gt; about this.
&lt;/p&gt;
&lt;p&gt;
	Over the last years, and specifically over the last weeks I continued upgrading my home video conferencing setup. I use a DSLR with a teleprompter to have a good image quality while being able to look directly at the camera. I invested in an overhead microphone with an external audio interface. Rather than attaching all devices to my desk (as I’ve done previously) I now moved my camera, lights and microphone to be wall attached. This gives me a video feed that doesn’t shake as I type.
&lt;/p&gt;
&lt;p&gt;
	It’ll be a busy few next weeks in between workshops and visiting the bay area, but I’m looking forward to some “downtime” after that so I can get back to improving the Field Guide.
&lt;/p&gt;
			</description>
			<pubDate>Tue, 28 May 2024 00:00:00 +0100</pubDate>
			<link>http://chris.eidhof.nl/post/2024-21</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-21</guid>
		</item>
		<item>
			<title>Weeknotes № 18</title>
			<description>
				&lt;p&gt;
	The &lt;a href=&quot;https://www.swiftuifieldguide.com/layout/dynamic-type/&quot;&gt;Dynamic Type&lt;/a&gt; page on the Field Guide is finally live. There are still some things I’d like to tweak (especially on mobile). The values that we use are directly from the Human Interface Guidelines, I’m not sure if they’re 100% the same as Apple’s actual implementation, but definitely close enough. We also used these to implement Dynamic Type on the Mac: &lt;a href=&quot;https://github.com/chriseidhof/dynamic-type&quot;&gt;https://github.com/chriseidhof/dynamic-type&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
	I played around with compiling Swift to WASM after seeing &lt;a href=&quot;https://m.objc.io/@maxd@mastodon.social/112373031107893812&quot;&gt;Max’s post&lt;/a&gt;. I really wanted to make it work with embedded Swift (to avoid large wasm binaries) but it’s still quite limited. I managed to produce &lt;a href=&quot;https://github.com/chriseidhof/wasm-testing&quot;&gt;a minimal Hello, World example&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
	We recorded some more Swift Talk episodes, and I had a bunch of workshop-related planning and calls. I also went to Prague to give a talk about SwiftUI’s layout system, which was nice but short. It was good seeing old friends again. The talk was a mix of live-coding and presentation, which turned out well, I think. I traveled to Prague by train, which is easily my prefered way of long-distance transportation. I love sitting on the train, looking out the window and doing some work.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 06 May 2024 00:00:00 +0100</pubDate>
			<link>http://chris.eidhof.nl/post/2024-18</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-18</guid>
		</item>
		<item>
			<title>Weeknotes № 16</title>
			<description>
				&lt;p&gt;
	After another workshop last week I did not have that much time to work on the Field Guide, but Dynamic Type is fully working now (and live). I’m hoping to write a bit about it soon as well.
&lt;/p&gt;
&lt;p&gt;
	This week, I’m giving a talk at a conference, and I’m using the Field Guide for my slides. This is where Dynamic Type comes in really handy: I can bump up the dynamic type setting and all examples increase their font sizes, which is incredibly useful.
&lt;/p&gt;
&lt;p&gt;
	In the future, I want to animate changes to the code (for example, animate the addition of a new modifier to existing code). I’ve been trying to think about this quite a bit. Currently, everything happens at the AST level, but should that maybe happen at the parse level (which doesn’t currently exist)? Or should I keep the syntax tree stable and somehow allow to add new root nodes? I’ve been experimenting a bit with the last approach but am not sure how it will work in practice. I’m unfortunately not aware of any research in that area (I’m sure there is some, I just don’t know what to search for).
&lt;/p&gt;
&lt;p&gt;
	Over the last months I’ve been preparing well for a marathon, and last Sunday was the race. I am pretty fit although far from PB level. For the first 25k, I was leading the race, but then slowed down a little bit. Just a few minutes later two volunteers sent me and the guy behind me in the wrong direction. This took us a few kms to figure out, so we ended up back at the start line in almost world record time (without having run the full distance, of course). This was incredibly frustrating after having spent all the time, effort and money just to be on the starting line. On the other hand, I know all too well how all of these events are run by large groups of volunteers and am very thankful for that, mistakes can happen. I think I did prove to myself that my fitness is increasing again, and hopefully I’ll run a full marathon somewhere in a few months!
&lt;/p&gt;
			</description>
			<pubDate>Mon, 22 Apr 2024 00:00:00 +0100</pubDate>
			<link>http://chris.eidhof.nl/post/2024-16</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-16</guid>
		</item>
		<item>
			<title>Weeknotes № 14-15</title>
			<description>
				&lt;p&gt;
	It’s been a couple of really busy weeks. We released two new pages: one on &lt;a href=&quot;https://www.swiftuifieldguide.com/layout/zstack/&quot;&gt;ZStack&lt;/a&gt; and one on &lt;a href=&quot;https://www.swiftuifieldguide.com/layout/lazyvgrid/&quot;&gt;LazyVGrid&lt;/a&gt;. These come with a couple of subtle changes as well: on the lazy grid page (and sprinkled throughout a few other places in the site) we now use the SVG rendering of shapes, which also lets us do very subtle gradients. We added a few subtle interactions as well: for example, the spacing is visualized while you edit the grid’s spacing.
&lt;/p&gt;
&lt;p&gt;
	I started preparing for a talk next week and wanted to use the Field Guide as my slides. Because a lot of the examples use small font sizes that are probably unreadable in a presentation, I gave the implementation of Dynamic Type a bit of priority, and it looks like it’s now fully working throughout the site. At the moment, you can’t adjust it (except in the code), but hopefully we’ll manage to build some UI for that soon.
&lt;/p&gt;
&lt;p&gt;
	Under the hood, I’ve been moving more and more modifiers away from custom views and into custom layouts. For example, padding is now just a padding layout, and overlay is an overlay layout (all the stacks and grids are layouts, as well). By doing this, I can actually focus on only the layout code and don’t have to worry about other boilerplate things. It feels much more natural and efficient than creating regular views or view modifiers.
&lt;/p&gt;
&lt;p&gt;
	We have a number of workshops coming up, and Juul has been very hard at work improving our workshop app (a native Mac app that comes with each workshop). It feels much more polished, is easier to read and navigate. It also supports Dynamic Type now (even though the Mac itself doesn’t, yet.).
&lt;/p&gt;
&lt;p&gt;
	I feel like I’m now finally almost done with setting up the new company. I have a new invoicing workflow, finally got my VAT ID (this involved me calling the tax office every single day, at some point they even recognized me by my phone number). The German bureaucracy was never much of an issue to me, but this time it definitely lived up to the hype.
&lt;/p&gt;
&lt;p&gt;
	I also booked my travel to go to &lt;a href=&quot;https://omt-conf.com&quot;&gt;One More Thing&lt;/a&gt;. I’ve never gotten lucky with getting a ticket to any of the Apple events (WWDC or Tech Talks) and so have never been at WWDC. But I’m excited to be around for the week, hoping to meet a lot of old and new friends.
&lt;/p&gt;
			</description>
			<pubDate>Tue, 16 Apr 2024 00:00:00 +0100</pubDate>
			<link>http://chris.eidhof.nl/post/2024-15</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-15</guid>
		</item>
		<item>
			<title>Weeknotes № 12-13</title>
			<description>
				&lt;p&gt;
	In between all the workshops and family stuff I’ve made progress in a few different areas of the SwiftUI Field Guide.
&lt;/p&gt;
&lt;p&gt;
	I’ve been trying to implement gradients, which turned out to be a bit of a rabbit hole. First of all, currently all shapes are rendered using the canvas API (originally, the entire SwiftUI port was rendered in a single canvas). To implement different gradients, I wanted to switch that out to SVG rendering.
&lt;/p&gt;
&lt;p&gt;
	In canvas, you define paths using the &lt;code&gt;Path2D&lt;/code&gt; type which isn’t “inspectable”. In other words, I needed to replicate the &lt;code&gt;Path2D&lt;/code&gt; API in my own type, which we can then use to turn into the SVG drawing commands. Mostly, everything works as before, but I need to put in a bit more time to make animations work as well.
&lt;/p&gt;
&lt;p&gt;
	To draw gradients, SVG has builtin support for linear and radial gradients. However, I noticed that these don’t look quite the same as SwiftUI. In the end, a gradient is just a function that interpolates between two colors. SVG gradients use an RGB color space, and to interpolate between two colors, each of the components (red, green and blue) are interpolated separately. It took a while to figure out that SwiftUI uses a different color space. In fact, you can actually configure whether to use the device color space or a “perceptual” color space (with the perceptual color space being the default).
&lt;/p&gt;
&lt;p&gt;
	From my testing, it looks like the perceptual color space used is &lt;a href=&quot;https://bottosson.github.io/posts/oklab/&quot;&gt;OKLab&lt;/a&gt;. After figuring that out, I searched for “OKLab SwiftUI” and found &lt;a href=&quot;https://twitter.com/DLX/status/1620465189069148160&quot;&gt;a tweet&lt;/a&gt; by (who else) Robb who seems to have figured out the same thing (more than one year before me, of course). I found &lt;a href=&quot;https://raphlinus.github.io/color/2021/01/18/oklab-critique.html&quot;&gt;this interactive review&lt;/a&gt; very helpful in understanding and visualizing the differences.
&lt;/p&gt;
&lt;p&gt;
	For now, I’m approximating a perceptual gradient by generating a linear RGB gradient with a number of extra “hidden” stops in between (which are interpolated in the OKLab color space). The implementation isn’t perfect but it’s a good start.
&lt;/p&gt;
&lt;p&gt;
	Early last December, I started to make calls to incorporate my new company. Most steps are done, but the German bureaucracy is not joking around on this one. I finally got my tax number a few weeks ago. However, for some opaque reason I couldn’t get a VAT ID After many calls to different agencies it took some steps to get the process unstuck (no one told me it was stuck, though). While I did apply for a new number now, the process might apparently take up to two months. I can’t send (or pay) any invoices outside of Germany until then, which is extremely annoying. It truly isn’t easy to start a business here. Luckily, my German is now good enough that I can at least talk to the people responsible for the individual steps. When they write letters, it’s nearly impossible to decipher them for someone like me, but in the end, they just seem to like to use complicated words and lots of jargon.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 01 Apr 2024 00:00:00 +0100</pubDate>
			<link>http://chris.eidhof.nl/post/2024-13</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-13</guid>
		</item>
		<item>
			<title>Weeknotes № 10-11</title>
			<description>
				&lt;p&gt;
	I’ve done two more weeks of weekly workshops (one in-person workshop in Germany, and one online for the US West Coast) and a talk at CocoaHeads Hamburg. It’s been pretty intense and I did not have a lot of time to work on the Field Guide.
&lt;/p&gt;
&lt;p&gt;
	One cool thing is that I gave my presentation in Hamburg using the Field Guide. I just set up a new “page” with full-screen interactive explanations and stepped through them. After all the hard work we put in it felt almost like cheating to be able to set up a basic presentation so quickly.
&lt;/p&gt;
&lt;p&gt;
	This week I’ll try to publish a new page about the safe area. I’ve been thinking about how to implement this for a long time, tried multiple approaches but ultimately settled on a relatively simple implementation (that’s correct in my limited testing). I have so many more ideas for where to take this, but currently only have limited time because of the workshops. I’m not yet set up for collaboration, so currently, I need to implement the SwiftUI part of the concept I want to explain, then implement the designs that Nicholas makes and finally write the explanations. Of course, we hardly ever get things right the first time around, so it’s always a few iterations of this process before we push things live.
&lt;/p&gt;
&lt;p&gt;
	The marathon training was slightly compromised especially by the traveling involved. I still think I’m well prepared to run a decent time next month. My plan was always to use the upcoming spring marathon as a stepping stone to getting fit again. I’m far from PB level fit (2:36) but hope I can run 2:50 or similar. That means spending the next few weeks tweaking the details, not getting injured and not getting sick.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate>
			<link>http://chris.eidhof.nl/post/2024-11</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-11</guid>
		</item>
		<item>
			<title>Weeknotes № 9</title>
			<description>
				&lt;p&gt;
	I spent last week teaching a workshop in Berlin. It was the first time in years doing an in-person workshop, which was really great. Im doing another in-person workshop in Hanover this week, and giving a talk in Hamburg at their CocoaHeads meetup. Both teaching the workshop from last week as well as preparing everything for this week did take up most of my time and energy.
&lt;/p&gt;
&lt;p&gt;
	Running-wise, I missed a few workouts. When I’m at home, I mostly run when it’s light out. I forgot to bring a headlamp, and couldn’t really do a speed workout in the dark with no vision while I was in Berlin. Luckily, my training schedule had a planned rest week anyway, so I’m not too worried about it. (Rest week doesn’t mean no running, it just means running a bit less).
&lt;/p&gt;
&lt;p&gt;
	I did manage to release one new section and two new pages for the Field Guide. The new section is about &lt;a href=&quot;https://www.swiftuifieldguide.com/layout/alignment/#customAlignmentIDs&quot;&gt;custom alignment IDs&lt;/a&gt;. I also added an &lt;a href=&quot;https://www.swiftuifieldguide.com/layout/introduction/&quot;&gt;introduction&lt;/a&gt; and a page about &lt;a href=&quot;https://www.swiftuifieldguide.com/layout/debugging/&quot;&gt;debugging techniques&lt;/a&gt;. I’m not sure yet what I’ll write about this week — there’s quite a backlog of things I’d like to cover still.
&lt;/p&gt;
&lt;p&gt;
	I also went over and fixed some bugs in the Field Guide. Since the first release the numbers in the sliders were often misaligned (sometimes not, though). It was a very simple fix in the end (although I did spent quite some time trying to fix it before). Likewise, there was a bug where some of the HStack examples would get stuck in an infinite render loop, ultimately causing the page to get really slow and make the browser unresponsive. That should be fixed now, too.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 04 Mar 2024 00:00:00 +0000</pubDate>
			<link>http://chris.eidhof.nl/post/2024-09</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-09</guid>
		</item>
		<item>
			<title>Weeknotes № 8</title>
			<description>
				&lt;p&gt;
	Last week I had to prepare a bunch of other things (workshops, start on a presentation) and only had limited time for the Field Guide. I also wanted to recover a bit from pushing myself. It’s kind of similar to running training: to achieve things on the short term, you need to push yourself out of your comfort zone, to achieve things on the long term, you need to then recover from that.
&lt;/p&gt;
&lt;p&gt;
	I did manage to write a section about &lt;a href=&quot;https://www.swiftuifieldguide.com/layout/layout/#flowLayout&quot;&gt;Building a Flow Layout&lt;/a&gt;. Because that section has a number of larger code blocks with no direct preview, we added little “info” icons in the gutter of the code. These highlight specific lines and show a small tooltip with an explanation. We also added code folding. Both of hopefully make the examples a little friendlier (yet, if you want to really understand what’s happening you’ll still need to struggle through the code, there’s no way around that). By the way, when I say “we”, I mean &lt;a href=&quot;https://nicholaschristowitz.com/projects/swiftuifieldguide/&quot;&gt;Nick&lt;/a&gt; and me. The entire site is a close collaboration between him designing and me implementing everything.
&lt;/p&gt;
&lt;p&gt;
	I had a good week of running as well, adding up to 123km. I’m not sure if I’ll ever make the time to get in PB shape again (it just requires a lot of training for me), I think I should be able to comfortably run a sub 3 marathon again.
&lt;/p&gt;
			</description>
			<pubDate>Mon, 26 Feb 2024 00:00:00 +0000</pubDate>
			<link>http://chris.eidhof.nl/post/2024-08</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-08</guid>
		</item>
		<item>
			<title>Weeknotes № 5-7</title>
			<description>
				&lt;p&gt;
	Over the last few weeks I worked with a strong focus and did not take the time to write weeknotes. The &lt;a href=&quot;https://www.swiftuifieldguide.com&quot;&gt;SwiftUI Field Guide&lt;/a&gt; is now live. I’ll try to blog a bit more about the why and how in the upcoming weeks. It felt a bit like preparing for a marathon: I worked hard at it almost every single day (often also evenings, after the kids went to bed) for multiple months. In the days before the launch, I wanted to get everything as perfect as I could (there were still some pretty embarassing bugs just before the launch). The day after launching it, I felt happy but absolutely exhausted.
&lt;/p&gt;
&lt;p&gt;
	It’s been a real pleasure building this. The design was all done by &lt;a href=&quot;https://nicholaschristowitz.com/&quot;&gt;Nick&lt;/a&gt; who also really obsessed over getting this right. I did the rest. There are so many fun little details in there: the site changes color when you’re in dark mode (and the “SwiftUI” colors change, too). The code is formatted using a pretty printer, making it responsive on mobile (this isn’t perfect, but in most examples it is better than doing nothing). The &lt;a href=&quot;https://www.swiftuifieldguide.com/layout/hstack/#PeDNMT-&quot;&gt;more complex animations&lt;/a&gt; are done in “SwiftUI”.
&lt;/p&gt;
&lt;p&gt;
	In my first prototype, I rendered everything using a flat canvas view. This worked well, but I realized at some point that I wanted more interactive elements such as scroll views and buttons. I didn’t really want to implement an entire scroll view myself. At some point, I switched to building up a DOM tree so that I could use the browser’s built-in scrolling (which in turn uses the platform’s built-in scrolling). Some views are still rendered using canvas (text and advanced shapes) where others use native DOM elements (a filled rounded rectangle, for example, is just a div with a background color and border radius).
&lt;/p&gt;
&lt;p&gt;
	I really wanted to make everything work as close as possible to real SwiftUI as I could. Essentially, anything that lays out differently I consider a bug. Hopefully I can fix some of the remaining bugs very soon.
&lt;/p&gt;
&lt;p&gt;
	In other news, I have been ramping up my marathon training again, and started a new schedule to (hopefully) run a marathon in late April. I typically prepare using at least a 16 week schedule, but due to illness at the beginning of the year I only have 12 weeks. I don’t want to run even later (in May) because I run much better when it’s cooler. I decided to use this marathon as a stepping stone to getting fit again. Clearly, there is no room for getting sick again — if COVID or something else happens I will have to set a different goal.
&lt;/p&gt;
			</description>
			<pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate>
			<link>http://chris.eidhof.nl/post/2024-07</link>
			<guid isPermaLink="true">http://chris.eidhof.nl/post/2024-07</guid>
		</item>
	</channel>
</rss>